{"version":3,"sources":["components/Users/Users.module.css","components/common/Paginator/Paginator.module.css","assets/images/user.png","components/Users/User.tsx","components/common/Paginator/Paginator.tsx","components/Users/Users.tsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/users-selectors.ts","components/Users/UsersContainer.tsx"],"names":["module","exports","User","user","props","to","id","src","photos","small","userPhoto","className","styles","followed","disabled","followingInProgress","some","onClick","unfollowTC","followTC","name","status","Paginator","totalItemsCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","paginator","filter","p","map","selectedPage","pageNumber","Users","users","totalUsersCount","u","React","memo","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","Object","assign","lastResult","recomputations","resetRecomputations","getUsers","state","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","UsersContainer","this","page","getUsers2","Preloader","bind","Component","compose","withAuthRedirect","connect","requestUsers","requestCurrentUsers"],"mappings":"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","file":"static/js/3.50ae603f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__2SrGb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__UGTbl\",\"pageNumber\":\"Paginator_pageNumber__2qZWG\",\"selectedPage\":\"Paginator_selectedPage__13WTy\"};","export default __webpack_public_path__ + \"static/media/user.8bb3b1b3.png\";","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {userType} from \"../../redux/users-reducer\";\r\nimport userPhoto from '../../assets/images/user.png'\r\nimport styles from \"./Users.module.css\"\r\n\r\n\r\ntype UserPropsType = {\r\n    key: number,\r\n    user: userType,\r\n    followingInProgress: Array<number>,\r\n    followTC: (id: number) => void,\r\n    unfollowTC: (id: number) => void,\r\n}\r\n\r\nconst User = ({user, ...props}: UserPropsType) => {\r\n  return (\r\n          <div key={user.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={`/profile/${user.id}`}>\r\n                                <img src={user.photos.small ? user.photos.small : userPhoto} className={styles.userPhoto}/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {\r\n                                user.followed\r\n\r\n                                    ? <button disabled={props.followingInProgress.some(id => id === user.id)}\r\n                                              onClick={() => {\r\n\r\n                                                  props.unfollowTC(user.id);\r\n\r\n                                              }}>\r\n                                        Unfollow\r\n                                    </button>\r\n\r\n                                    : <button disabled={props.followingInProgress.some(id => id === user.id)}\r\n                                              onClick={() => {\r\n\r\n                                                  props.followTC(user.id);\r\n\r\n                                              }}>\r\n                                        Follow\r\n                                    </button>\r\n                            }\r\n                        </div>\r\n                    </span>\r\n              <span>\r\n                        <div>\r\n                           {user.name}\r\n                        </div>\r\n                        <div>\r\n                            {user.status}\r\n                        </div>\r\n                    </span>\r\n              <span>\r\n                        <div>\r\n                           {\"u.location.country\"},\r\n                        </div>\r\n                        <div>\r\n                            {\"u.location.city\"}\r\n                        </div>\r\n                    </span>\r\n          </div>\r\n  )\r\n}\r\n\r\nexport default User;","import React, {useState} from \"react\";\r\nimport styles from \"./Paginator.module.css\"\r\n\r\n\r\nexport type PaginatorPropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (page: number) => void\r\n    portionSize: number\r\n}\r\n\r\nconst Paginator = ({totalItemsCount, pageSize, currentPage = 1, onPageChanged, portionSize = 10,...props}: PaginatorPropsType) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount/portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionNumber = portionNumber * portionSize\r\n\r\n\r\n    return (\r\n        <div className={styles.paginator}>{\r\n            portionNumber > 1 &&\r\n            <button onClick={() => setPortionNumber(--portionNumber)}>previous</button>\r\n        }\r\n            {\r\n                pages\r\n                    .filter(p => p >= leftPortionNumber && p <= rightPortionNumber)\r\n                    .map(p => <span key={p}\r\n                    className={ `${currentPage === p ? styles.selectedPage : \"\"} + ${styles.pageNumber}`}\r\n                    onClick={() => onPageChanged(p)}\r\n                > {p}</span>)\r\n            }\r\n            {\r\n                portionNumber < portionCount &&\r\n                <button onClick={() => setPortionNumber(++portionNumber)}>next</button>\r\n            }\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport styles from \"./Users.module.css\"\r\nimport {userType} from \"../../redux/users-reducer\";\r\nimport User from \"./User\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\n\r\ntype UsersPropsType = {\r\n    users: Array<userType>\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (page: number) => void\r\n    followingInProgress: Array<number>\r\n    followTC: (id: number) => void,\r\n    unfollowTC: (id: number) => void,\r\n}\r\n\r\n    function Users ({users, followingInProgress, followTC, unfollowTC, ...props}: UsersPropsType) {\r\n\r\n        return (\r\n            <div>\r\n                    <Paginator totalItemsCount={props.totalUsersCount} pageSize={props.pageSize}\r\n                               currentPage={props.currentPage} onPageChanged={props.onPageChanged}\r\n                               portionSize={10}\r\n                    />\r\n                {users && users.map(u => <User key={u.id}\r\n                          user={u}\r\n                          followingInProgress={followingInProgress}\r\n                          followTC={followTC}\r\n                          unfollowTC={unfollowTC}\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\nexport default React.memo(Users);","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function () {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import {AppStateType} from \"./redux-store\";\r\nimport {userType} from \"./users-reducer\";\r\nimport {createSelector} from \"reselect\";\r\n\r\n\r\nconst getUsersSelector = (state: AppStateType): Array<userType>  => {\r\n    return state.users.users\r\n}\r\nexport const getUsers = createSelector(getUsersSelector, (\r\n    (users) => {\r\n    return users\r\n}))\r\n\r\n\r\nexport const getPageSize = (state: AppStateType): number => {\r\n    return state.users.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppStateType): number => {\r\n    return state.users.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType): number => {\r\n    return state.users.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType): boolean => {\r\n    return state.users.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: AppStateType): Array<number> => {\r\n    return state.users.followingInProgress\r\n}\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport {\r\n    userType, requestUsers, requestCurrentUsers, followTC, unfollowTC,\r\n} from \"../../redux/users-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nexport type UsersContainerPropsType = mapStateToPropsUsersType & mapDispatchToPropsUsersType\r\n\r\nclass UsersContainer extends React.Component <UsersContainerPropsType, Array<userType>> {\r\n\r\n    constructor(props: UsersContainerPropsType) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    componentDidMount(): void {\r\n\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged(page: number): void {\r\n\r\n        this.props.getUsers2(page, this.props.pageSize);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ?\r\n                    <Preloader />\r\n                    : null}\r\n                <Users users={this.props.users}\r\n                       totalUsersCount={this.props.totalUsersCount}\r\n                       pageSize={this.props.pageSize}\r\n                       currentPage={this.props.currentPage}\r\n                       onPageChanged={this.onPageChanged.bind(this)}\r\n                       followingInProgress={this.props.followingInProgress}\r\n                       followTC={this.props.followTC}\r\n                       unfollowTC={this.props.unfollowTC}\r\n\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport type mapStateToPropsUsersType = {\r\n    users: Array<userType>,\r\n    pageSize: number,\r\n    totalUsersCount: number,\r\n    currentPage: number,\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        }\r\n}\r\n\r\nexport type mapDispatchToPropsUsersType = {\r\n    getUsers: (currentPage: number, pageSize: number) => void,\r\n    getUsers2: (page: number, pageSize: number) => void,\r\n    followTC: (id: number) => void,\r\n    unfollowTC: (id: number) => void,\r\n}\r\n\r\n\r\nexport default compose<React.ComponentType>\r\n(withAuthRedirect, connect(mapStateToProps, {getUsers: requestUsers, getUsers2: requestCurrentUsers, followTC, unfollowTC})\r\n)(UsersContainer);\r\n"],"sourceRoot":""}